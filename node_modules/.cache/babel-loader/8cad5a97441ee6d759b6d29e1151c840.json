{"ast":null,"code":"var _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/elements/MovieThumb/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = props => {\n  const image = props.image,\n        clickable = props.clickable,\n        movieId = props.movieId,\n        movieName = props.movieName;\n  return React.createElement(\"div\", {\n    className: \"rmdb-moviethumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, clickable ? React.createElement(Link, {\n    to: {\n      pathname: \"/\".concat(movieId),\n      movieName: \"\".concat(movieName)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    alt: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })) : React.createElement(\"img\", {\n    src: image,\n    alt: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string.isRequired,\n  clickable: PropTypes.bool\n};\nexport default MovieThumb;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/elements/MovieThumb/index.js"],"names":["React","Link","PropTypes","MovieThumb","props","image","clickable","movieId","movieName","pathname","propTypes","string","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,QAClBC,KADkB,GACuBD,KADvB,CAClBC,KADkB;AAAA,QACXC,SADW,GACuBF,KADvB,CACXE,SADW;AAAA,QACAC,OADA,GACuBH,KADvB,CACAG,OADA;AAAA,QACSC,SADT,GACuBJ,KADvB,CACSI,SADT;AAE1B,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,aAAMF,OAAN,CAAV;AAA2BC,MAAAA,SAAS,YAAKA,SAAL;AAApC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEH,KAAV;AAAiB,IAAA,GAAG,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,GAAG,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAWD,CAbD;;AAeAF,UAAU,CAACO,SAAX,GAAuB;AACrBL,EAAAA,KAAK,EAAEH,SAAS,CAACS,MAAV,CAAiBC,UADH;AAErBN,EAAAA,SAAS,EAAEJ,SAAS,CAACW;AAFA,CAAvB;AAKA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './MovieThumb.css';\n\nconst MovieThumb = props => {\n  const { image, clickable, movieId, movieName } = props;\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}` }}>\n          <img src={image} alt='movie' />\n        </Link>\n      ) : (\n        <img src={image} alt='movie' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string.isRequired,\n  clickable: PropTypes.bool,\n};\n\nexport default MovieThumb;\n"]},"metadata":{},"sourceType":"module"}