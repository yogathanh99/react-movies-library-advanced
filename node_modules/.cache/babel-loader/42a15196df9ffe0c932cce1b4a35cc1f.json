{"ast":null,"code":"var _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/elements/MovieInfo/index.js\";\nimport React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../../config';\nimport MovieThumb from '../MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({\n  movie,\n  directors\n}) => {\n  console.log(directors.length);\n  return React.createElement(\"div\", {\n    className: \"rmdb-movieinfo\",\n    style: {\n      background: movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(movie.backdrop_path, \"')\") : '#000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MovieThumb, {\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : './images/no_image.jpg',\n    clickable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, movie.title), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"PLOT\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, movie.overview), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"IMDB RATING\"), React.createElement(\"div\", {\n    className: \"rmdb-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"10\",\n    optimum: \"10\",\n    low: \"4\",\n    high: \"7\",\n    value: movie.vote_average,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, movie.vote_average))), React.createElement(FontAwesome, {\n    className: \"fa-film\",\n    name: \"film\",\n    size: \"5x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/elements/MovieInfo/index.js"],"names":["React","FontAwesome","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","MovieThumb","MovieInfo","movie","directors","console","log","length","background","backdrop_path","poster_path","title","overview","vote_average"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,WAAxC,QAA2D,iBAA3D;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,MAAtB;AACA,SACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEL,KAAK,CAACM,aAAN,kBACAX,cADA,SACiBC,aADjB,SACiCI,KAAK,CAACM,aADvC,UAER;AAHC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EACHN,KAAK,CAACO,WAAN,aACOZ,cADP,SACwBE,WADxB,SACsCG,KAAK,CAACO,WAD5C,IAEI,uBAJR;AAME,IAAA,SAAS,EAAE,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACQ,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,KAAK,CAACS,QAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAC,GADN;AAEE,IAAA,GAAG,EAAC,IAFN;AAGE,IAAA,OAAO,EAAC,IAHV;AAIE,IAAA,GAAG,EAAC,GAJN;AAKE,IAAA,IAAI,EAAC,GALP;AAME,IAAA,KAAK,EAAET,KAAK,CAACU,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BV,KAAK,CAACU,YAAjC,CATF,CALF,CAXF,EAsCE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,SAAvB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCF,CARF,CADF;AAmDD,CArDD;;AAuDA,eAAeX,SAAf","sourcesContent":["import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../../config';\nimport MovieThumb from '../MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => {\n  console.log(directors.length);\n  return (\n    <div\n      className='rmdb-movieinfo'\n      style={{\n        background: movie.backdrop_path\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\n          : '#000',\n      }}\n    >\n      <div className='rmdb-movieinfo-content'>\n        <div className='rmdb-movieinfo-thumb'>\n          <MovieThumb\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : './images/no_image.jpg'\n            }\n            clickable={false}\n          />\n        </div>\n        <div className='rmdb-movieinfo-text'>\n          <h1>{movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{movie.overview}</p>\n          <h3>IMDB RATING</h3>\n          <div className='rmdb-rating'>\n            <meter\n              min='0'\n              max='10'\n              optimum='10'\n              low='4'\n              high='7'\n              value={movie.vote_average}\n            ></meter>\n            <p className='rmdb-score'>{movie.vote_average}</p>\n          </div>\n          {/* \n          {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n          {directors.map((element, i) => {\n            return (\n              <p key={i} className='rmdb-director'>\n                {element.name}\n              </p>\n            );\n          })} */}\n        </div>\n\n        <FontAwesome className='fa-film' name='film' size='5x' />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}