{"ast":null,"code":"import _defineProperty from \"/Users/thanhvo/Self-Learning/react-movies-library/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/Movie/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation';\nimport MovieInfo from '../elements/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport Actor from '../elements/Actor';\nimport Spinner from '../elements/Spinner';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchData = async endpoint => {\n      const movieId = this.props.match.params.movieId;\n      await axios.get(endpoint).then(res => res.data).then(data => {\n        if (data.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: data\n          }, async () => {\n            let endpointData = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n            await axios.get(endpointData).then(res => res.data).then(res => {\n              const directors = res.crew.filter(member => member.job === 'Director');\n              this.setState({\n                actors: res.cast,\n                directors,\n                loading: false\n              }, () => {\n                localStorage.setItem(\"\".concat(movieId), JSON.stringify(this.state));\n              });\n            });\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const movieId = this.props.match.params.movieId;\n\n    if (localStorage.getItem(\"\".concat(movieId))) {\n      const state = localStorage.getItem(\"\".concat(movieId));\n      this.setState(_objectSpread({}, state));\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n      this.fetchData(endpoint);\n    }\n  }\n\n  render() {\n    const movieName = this.props.location.movieName;\n    const _this$state = this.state,\n          movie = _this$state.movie,\n          directors = _this$state.directors,\n          actors = _this$state.actors,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, movie ? React.createElement(React.Fragment, null, React.createElement(Navigation, {\n      movieName: movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      movie: movie,\n      directors: directors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      time: movie.runtime,\n      budget: movie.budget,\n      revenue: movie.revenue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })) : null, actors ? React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: 'Actors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, actors.map((actor, i) => React.createElement(Actor, {\n      key: i,\n      actor: actor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))) : null, !actors && !loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"No Movie Found\") : null, loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/Movie/index.js"],"names":["React","axios","API_KEY","API_URL","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","Component","state","movie","actors","directors","loading","fetchData","endpoint","movieId","props","match","params","get","then","res","data","status_code","setState","endpointData","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","componentDidMount","getItem","render","movieName","location","runtime","budget","revenue","map","actor","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation';\nimport MovieInfo from '../elements/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport Actor from '../elements/Actor';\nimport Spinner from '../elements/Spinner';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    if (localStorage.getItem(`${movieId}`)) {\n      const state = localStorage.getItem(`${movieId}`);\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchData(endpoint);\n    }\n  }\n\n  fetchData = async endpoint => {\n    const { movieId } = this.props.match.params;\n    await axios\n      .get(endpoint)\n      .then(res => res.data)\n      .then(data => {\n        if (data.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: data }, async () => {\n            let endpointData = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            await axios\n              .get(endpointData)\n              .then(res => res.data)\n              .then(res => {\n                const directors = res.crew.filter(\n                  member => member.job === 'Director',\n                );\n                this.setState(\n                  {\n                    actors: res.cast,\n                    directors,\n                    loading: false,\n                  },\n                  () => {\n                    localStorage.setItem(\n                      `${movieId}`,\n                      JSON.stringify(this.state),\n                    );\n                  },\n                );\n              });\n          });\n        }\n      });\n  };\n\n  render() {\n    const { movieName } = this.props.location;\n\n    const {\n      state: { movie, directors, actors, loading },\n    } = this;\n    return (\n      <div className='rmdb-movie'>\n        {movie ? (\n          <>\n            <Navigation movieName={movieName} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar\n              time={movie.runtime}\n              budget={movie.budget}\n              revenue={movie.revenue}\n            />\n          </>\n        ) : null}\n        {actors ? (\n          <div className='rmdb-movie-grid'>\n            <FourColGrid header={'Actors'}>\n              {actors.map((actor, i) => (\n                <Actor key={i} actor={actor} />\n              ))}\n            </FourColGrid>\n          </div>\n        ) : null}\n        {!actors && !loading ? <h1>No Movie Found</h1> : null}\n        {loading ? <Spinner /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}