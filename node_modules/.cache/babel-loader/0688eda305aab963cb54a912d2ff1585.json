{"ast":null,"code":"import _slicedToArray from \"/Users/thanhvo/Self-Learning/react-movies-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HeroImage from '../elements/HeroImage';\nimport SearchBar from '../elements/SearchBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\nimport Spinner from '../elements/Spinner';\nimport { API_KEY, API_URL, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport './Home.css'; // class Home extends React.Component {\n//   state = {\n//     movies: [],\n//     heroImage: null,\n//     loading: false,\n//     currentPage: 0,\n//     totalPages: 0,\n//     searchTerm: '',\n//   };\n//   componentDidMount() {\n//     this.setState({ loading: true });\n//     const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n//     this.fetchItems(endpoint);\n//   }\n//   fetchItems = async endpoint => {\n//     const data = await axios.get(endpoint).then(res => res.data);\n//     this.setState({\n//       movies: [...this.state.movies, ...data.results],\n//       heroImage: data.results[0],\n//       loading: false,\n//       currentPage: data.page,\n//       totalPages: data.total_pages,\n//     });\n//   };\n//   searchItem = searchTerm => {\n//     let endpoint = '';\n//     this.setState({\n//       movies: [],\n//       loading: true,\n//       searchTerm,\n//     });\n//     if (searchTerm === '') {\n//       endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n//     } else {\n//       endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n//     }\n//     this.fetchItems(endpoint);\n//   };\n//   loadMoreItems = () => {\n//     let endpoint = '';\n//     const { searchTerm, currentPage } = this.state;\n//     this.setState({ loading: true });\n//     if (searchTerm === '') {\n//       endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n//         1}`;\n//     } else {\n//       endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n//         1}`;\n//     }\n//     this.fetchItems(endpoint);\n//   };\n//   render() {\n//     const { movies, heroImage, searchTerm, loading } = this.state;\n//     return (\n//       <div className='rmdb-home'>\n//         {heroImage ? (\n//           <HeroImage\n//             image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n//             title={heroImage.original_title}\n//           >\n//             {heroImage.overview}\n//           </HeroImage>\n//         ) : null}\n//         <SearchBar callback={this.searchItem} />\n//         <div className='rmdb-home-grid'>\n//           <FourColGrid\n//             header={searchTerm ? 'Search Result' : 'Popular Movies'}\n//             loading={loading}\n//           >\n//             {movies.map((movie, i) => (\n//               <MovieThumb\n//                 key={i}\n//                 clickable={true}\n//                 image={\n//                   movie.poster_path\n//                     ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n//                     : './images/no_image.jpg'\n//                 }\n//                 movieId={movie.id}\n//                 movieName={movie.original_title}\n//               />\n//             ))}\n//           </FourColGrid>\n//         </div>\n//         <Spinner />\n//         <LoadMoreBtn />\n//       </div>\n//     );\n//   }\n// }\n\nconst Home = () => {\n  const _useState = useState({\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n    fetchItems(endpoint);\n  }, [state.searchTerm]);\n\n  const fetchItems = async endpoint => {\n    const data = await axios.get(endpoint).then(res => res.data);\n    setState({\n      movies: [...state.movies, ...data.results],\n      heroImage: data.results[0],\n      loading: false,\n      currentPage: data.page,\n      totalPages: data.total_pages\n    });\n  };\n\n  const searchItem = searchTerm => {\n    let endpoint = '';\n    setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === '') {\n      endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n    } else {\n      endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm);\n    }\n\n    fetchItems(endpoint);\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = '';\n    const searchTerm = state.searchTerm,\n          currentPage = state.currentPage;\n    setState({\n      loading: true\n    });\n\n    if (searchTerm === '') {\n      endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(currentPage + 1);\n    } else {\n      endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n    }\n\n    fetchItems(endpoint);\n  };\n\n  const movies = state.movies,\n        heroImage = state.heroImage,\n        searchTerm = state.searchTerm,\n        loading = state.loading;\n  return React.createElement(\"div\", {\n    className: \"rmdb-home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, heroImage ? React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, heroImage.overview) : null, React.createElement(SearchBar, {\n    callback: searchItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"rmdb-home-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(FourColGrid, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, movies.map((movie, i) => React.createElement(MovieThumb, {\n    key: i,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : './images/no_image.jpg',\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })))), React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(LoadMoreBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/Home/index.js"],"names":["React","useState","useEffect","axios","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","API_KEY","API_URL","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","Home","movies","heroImage","loading","currentPage","totalPages","searchTerm","state","setState","endpoint","fetchItems","data","get","then","res","results","page","total_pages","searchItem","loadMoreItems","backdrop_path","original_title","overview","map","movie","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport HeroImage from '../elements/HeroImage';\nimport SearchBar from '../elements/SearchBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\nimport Spinner from '../elements/Spinner';\nimport {\n  API_KEY,\n  API_URL,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from '../../config';\nimport './Home.css';\n\n// class Home extends React.Component {\n//   state = {\n//     movies: [],\n//     heroImage: null,\n//     loading: false,\n//     currentPage: 0,\n//     totalPages: 0,\n//     searchTerm: '',\n//   };\n\n//   componentDidMount() {\n//     this.setState({ loading: true });\n//     const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n//     this.fetchItems(endpoint);\n//   }\n\n//   fetchItems = async endpoint => {\n//     const data = await axios.get(endpoint).then(res => res.data);\n//     this.setState({\n//       movies: [...this.state.movies, ...data.results],\n//       heroImage: data.results[0],\n//       loading: false,\n//       currentPage: data.page,\n//       totalPages: data.total_pages,\n//     });\n//   };\n\n//   searchItem = searchTerm => {\n//     let endpoint = '';\n//     this.setState({\n//       movies: [],\n//       loading: true,\n//       searchTerm,\n//     });\n\n//     if (searchTerm === '') {\n//       endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n//     } else {\n//       endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n//     }\n//     this.fetchItems(endpoint);\n//   };\n\n//   loadMoreItems = () => {\n//     let endpoint = '';\n//     const { searchTerm, currentPage } = this.state;\n\n//     this.setState({ loading: true });\n//     if (searchTerm === '') {\n//       endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n//         1}`;\n//     } else {\n//       endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n//         1}`;\n//     }\n\n//     this.fetchItems(endpoint);\n//   };\n\n//   render() {\n//     const { movies, heroImage, searchTerm, loading } = this.state;\n\n//     return (\n//       <div className='rmdb-home'>\n//         {heroImage ? (\n//           <HeroImage\n//             image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n//             title={heroImage.original_title}\n//           >\n//             {heroImage.overview}\n//           </HeroImage>\n//         ) : null}\n//         <SearchBar callback={this.searchItem} />\n//         <div className='rmdb-home-grid'>\n//           <FourColGrid\n//             header={searchTerm ? 'Search Result' : 'Popular Movies'}\n//             loading={loading}\n//           >\n//             {movies.map((movie, i) => (\n//               <MovieThumb\n//                 key={i}\n//                 clickable={true}\n//                 image={\n//                   movie.poster_path\n//                     ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n//                     : './images/no_image.jpg'\n//                 }\n//                 movieId={movie.id}\n//                 movieName={movie.original_title}\n//               />\n//             ))}\n//           </FourColGrid>\n//         </div>\n//         <Spinner />\n//         <LoadMoreBtn />\n//       </div>\n//     );\n//   }\n// }\n\nconst Home = () => {\n  const [state, setState] = useState({\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: '',\n  });\n\n  useEffect(() => {\n    setState({ loading: true });\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint);\n  }, [state.searchTerm]);\n\n  const fetchItems = async endpoint => {\n    const data = await axios.get(endpoint).then(res => res.data);\n    setState({\n      movies: [...state.movies, ...data.results],\n      heroImage: data.results[0],\n      loading: false,\n      currentPage: data.page,\n      totalPages: data.total_pages,\n    });\n  };\n\n  const searchItem = searchTerm => {\n    let endpoint = '';\n    setState({\n      movies: [],\n      loading: true,\n      searchTerm,\n    });\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    fetchItems(endpoint);\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = '';\n    const { searchTerm, currentPage } = state;\n\n    setState({ loading: true });\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n        1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n        1}`;\n    }\n\n    fetchItems(endpoint);\n  };\n\n  const { movies, heroImage, searchTerm, loading } = state;\n\n  return (\n    <div className='rmdb-home'>\n      {heroImage ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n          title={heroImage.original_title}\n        >\n          {heroImage.overview}\n        </HeroImage>\n      ) : null}\n      <SearchBar callback={searchItem} />\n      <div className='rmdb-home-grid'>\n        <FourColGrid\n          header={searchTerm ? 'Search Result' : 'Popular Movies'}\n          loading={loading}\n        >\n          {movies.map((movie, i) => (\n            <MovieThumb\n              key={i}\n              clickable={true}\n              image={\n                movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : './images/no_image.jpg'\n              }\n              movieId={movie.id}\n              movieName={movie.original_title}\n            />\n          ))}\n        </FourColGrid>\n      </div>\n      <Spinner />\n      <LoadMoreBtn />\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}