{"ast":null,"code":"var _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/Movie/index.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation';\nimport MovieInfo from '../elements/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport Actor from '../elements/Actor';\nimport Spinner from '../elements/Spinner';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchData = async endpoint => {\n      const movieId = this.props.match.params.movieId;\n      await axios.get(endpoint).then(res => res.data).then(data => {\n        if (data.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movies: data\n          }, async () => {\n            let endpointData = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n            await axios.get(endpointData).then(res => res.data).then(res => {\n              console.log(res);\n              const directors = res.crew.filter(member => member.job === 'Director');\n              this.setState({\n                actors: res.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const movieId = this.props.match.params.movieId;\n    this.setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n    this.fetchData(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/Movie/index.js"],"names":["React","axios","API_KEY","API_URL","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","Component","state","movies","actors","directors","loading","fetchData","endpoint","movieId","props","match","params","get","then","res","data","status_code","setState","endpointData","console","log","crew","filter","member","job","cast","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KAD0B;;AAAA,SAelCC,SAfkC,GAetB,MAAMC,QAAN,IAAkB;AAAA,YACpBC,OADoB,GACR,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADT,CACpBH,OADoB;AAE5B,YAAMlB,KAAK,CACRsB,GADG,CACCL,QADD,EAEHM,IAFG,CAEEC,GAAG,IAAIA,GAAG,CAACC,IAFb,EAGHF,IAHG,CAGEE,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,WAAT,EAAsB;AACpB,eAAKC,QAAL,CAAc;AAAEZ,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,eAAKY,QAAL,CAAc;AAAEf,YAAAA,MAAM,EAAEa;AAAV,WAAd,EAAgC,YAAY;AAC1C,gBAAIG,YAAY,aAAM1B,OAAN,mBAAsBgB,OAAtB,8BAAiDjB,OAAjD,CAAhB;AACA,kBAAMD,KAAK,CACRsB,GADG,CACCM,YADD,EAEHL,IAFG,CAEEC,GAAG,IAAIA,GAAG,CAACC,IAFb,EAGHF,IAHG,CAGEC,GAAG,IAAI;AACXK,cAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,oBAAMV,SAAS,GAAGU,GAAG,CAACO,IAAJ,CAASC,MAAT,CAChBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UADT,CAAlB;AAGA,mBAAKP,QAAL,CAAc;AACZd,gBAAAA,MAAM,EAAEW,GAAG,CAACW,IADA;AAEZrB,gBAAAA,SAFY;AAGZC,gBAAAA,OAAO,EAAE;AAHG,eAAd;AAKD,aAbG,CAAN;AAcD,WAhBD;AAiBD;AACF,OAzBG,CAAN;AA0BD,KA3CiC;AAAA;;AAQlCqB,EAAAA,iBAAiB,GAAG;AAAA,UACVlB,OADU,GACE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADnB,CACVH,OADU;AAElB,SAAKS,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAME,QAAQ,aAAMf,OAAN,mBAAsBgB,OAAtB,sBAAyCjB,OAAzC,oBAAd;AACA,SAAKe,SAAL,CAAeC,QAAf;AACD;;AAgCDoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAvDiC;;AA0DpC,eAAe5B,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation';\nimport MovieInfo from '../elements/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport Actor from '../elements/Actor';\nimport Spinner from '../elements/Spinner';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  state = {\n    movies: null,\n    actors: null,\n    directors: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    this.setState({ loading: true });\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchData(endpoint);\n  }\n\n  fetchData = async endpoint => {\n    const { movieId } = this.props.match.params;\n    await axios\n      .get(endpoint)\n      .then(res => res.data)\n      .then(data => {\n        if (data.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movies: data }, async () => {\n            let endpointData = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            await axios\n              .get(endpointData)\n              .then(res => res.data)\n              .then(res => {\n                console.log(res);\n                const directors = res.crew.filter(\n                  member => member.job === 'Director',\n                );\n                this.setState({\n                  actors: res.cast,\n                  directors,\n                  loading: false,\n                });\n              });\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className='rmdb-movie'>\n        <Navigation />\n        <MovieInfo />\n        <MovieInfoBar />\n        {/* <FourColGrid /> */}\n        <Spinner />\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}