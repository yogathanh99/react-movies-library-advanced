{"ast":null,"code":"var _jsxFileName = \"/Users/thanhvo/Self-Learning/react-movies-library/src/components/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HeroImage from '../elements/HeroImage';\nimport SearchBar from '../elements/SearchBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\nimport Spinner from '../elements/Spinner';\nimport { API_KEY, API_URL, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport './Home.css';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.fetchItems = async endpoint => {\n      const data = await axios.get(endpoint).then(res => res.data);\n      this.setState({\n        movies: [...this.state.movies, ...data.results],\n        heroImage: data.results[0],\n        loading: false,\n        currentPage: data.page,\n        totalPages: data.total_pages\n      });\n    };\n\n    this.searchItem = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = '';\n      const _this$state = this.state,\n            searchTerm = _this$state.searchTerm,\n            currentPage = _this$state.currentPage;\n      this.setState({\n        loading: true\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(currentPage + 1);\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n      }\n\n      this.fetchItems(endpoint);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          movies = _this$state2.movies,\n          heroImage = _this$state2.heroImage,\n          searchTerm = _this$state2.searchTerm,\n          loading = _this$state2.loading;\n    return React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, heroImage ? React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n      title: heroImage.original_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, heroImage.overview) : null, React.createElement(SearchBar, {\n      callback: this.searchItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, movies.map((movie, i) => React.createElement(MovieThumb, {\n      key: i,\n      clickable: true,\n      image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : './images/no_image.jpg',\n      movieId: movie.id,\n      movieName: movie.original_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : null), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(LoadMoreBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/thanhvo/Self-Learning/react-movies-library/src/components/Home/index.js"],"names":["React","useState","useEffect","axios","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","API_KEY","API_URL","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","Home","Component","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","fetchItems","endpoint","data","get","then","res","setState","results","page","total_pages","searchItem","loadMoreItems","componentDidMount","render","backdrop_path","original_title","overview","map","movie","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport HeroImage from '../elements/HeroImage';\nimport SearchBar from '../elements/SearchBar';\nimport FourColGrid from '../elements/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\nimport Spinner from '../elements/Spinner';\nimport {\n  API_KEY,\n  API_URL,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from '../../config';\nimport './Home.css';\n\nclass Home extends React.Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: '',\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const data = await axios.get(endpoint).then(res => res.data);\n    this.setState({\n      movies: [...this.state.movies, ...data.results],\n      heroImage: data.results[0],\n      loading: false,\n      currentPage: data.page,\n      totalPages: data.total_pages,\n    });\n  };\n\n  searchItem = searchTerm => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm,\n    });\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = '';\n    const { searchTerm, currentPage } = this.state;\n\n    this.setState({ loading: true });\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n        1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n        1}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  render() {\n    const { movies, heroImage, searchTerm, loading } = this.state;\n\n    return (\n      <div className='rmdb-home'>\n        {heroImage ? (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n            title={heroImage.original_title}\n          >\n            {heroImage.overview}\n          </HeroImage>\n        ) : null}\n        <SearchBar callback={this.searchItem} />\n        <div className='rmdb-home-grid'>\n          <FourColGrid\n            header={searchTerm ? 'Search Result' : 'Popular Movies'}\n            loading={loading}\n          >\n            {movies.map((movie, i) => (\n              <MovieThumb\n                key={i}\n                clickable={true}\n                image={\n                  movie.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : './images/no_image.jpg'\n                }\n                movieId={movie.id}\n                movieName={movie.original_title}\n              />\n            ))}\n          </FourColGrid>\n          {loading ? <Spinner /> : null}\n        </div>\n        <Spinner />\n        <LoadMoreBtn />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}